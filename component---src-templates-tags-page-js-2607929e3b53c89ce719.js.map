{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/util/utilityFunctions.js","webpack:///./node_modules/reactstrap/es/Button.js","webpack:///./src/templates/tags-page.js","webpack:///./src/components/seo.js"],"names":["propTypes","color","string","pill","bool","tag","innerRef","oneOfType","object","func","children","node","className","cssModule","Badge","props","Tag","attributes","classes","href","createElement","ref","defaultProps","module","exports","slugify","text","toString","toLowerCase","replace","active","block","disabled","outline","onClick","size","close","_React$Component","Button","_this","call","this","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","btnOutlineColor","defaultAriaLabel","type","undefined","Component","tagsPage","pageContext","tags","tagPostCounts","pageTitle","title","keyword","map","key","style","marginBottom","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-templates-tags-page-js-2607929e3b53c89ce719.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","const slugify = function(text) {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '-')       // Replace spaces with -\r\n      .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\r\n      .replace(/--+/g, '-')       // Replace multiple - with single -\r\n      .replace(/^-+/, '')         // Trim - from start of text\r\n      .replace(/-+$/, '')         // Trim - from end of text\r\n  }\r\n\r\nmodule.exports =  { slugify }","import \"core-js/modules/es6.function.bind\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport { Badge, Button } from 'reactstrap'\r\nimport { slugify } from '../util/utilityFunctions'\r\n\r\nconst tagsPage = ({ pageContext }) => {\r\n    const { tags,tagPostCounts } = pageContext\r\n    return(\r\n        <Layout pageTitle=\"All tags\">\r\n            <SEO title=\"All tags\" keyword={['tags','topics']}/>\r\n            <ul>\r\n                {tags.map(tag => (\r\n                    <li key={tags} style={{ marginBottom: '10px'}}>\r\n                        <Button color=\"primary\" href={`/tag/${slugify(tag)}`}>\r\n                            {tag} <Badge color=\"light\">{tagPostCounts[tag]}</Badge>\r\n                        </Button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default tagsPage","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}