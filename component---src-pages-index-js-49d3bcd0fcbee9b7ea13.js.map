{"version":3,"sources":["webpack:///./src/components/Post.js","webpack:///./src/pages/index.js"],"names":["Post","title","author","slug","date","body","fluid","tags","Card","to","className","CardBody","CardTitle","CardSubtitle","CardText","map","tag","key","slugify","Badge","color","indexQuery","IndexPage","Row","Col","md","query","render","data","allMarkdownRemark","edges","node","id","frontmatter","fields","excerpt","image","childImageSharp","Sidebar"],"mappings":"4SAoCeA,EA9BF,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACpD,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,OAAD,CAAMC,GAAIN,GACN,kBAAC,IAAD,CAAKO,UAAU,iBAAiBJ,MAAOA,KAE3C,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAW,kBAAC,OAAD,CAAMH,GAAIN,GAAOF,IAC5B,kBAACY,EAAA,EAAD,KACI,0BAAMH,UAAU,aAAaN,GADjC,MACiD,IAC7C,0BAAMM,UAAU,aAAaR,IAEjC,kBAACY,EAAA,EAAD,KAAWT,GACX,wBAAIK,UAAU,aACTH,EAAKQ,KAAI,SAAAC,GAAG,OACT,wBAAIC,IAAKD,GACL,kBAAC,OAAD,CAAMP,GAAE,QAAUS,kBAAQF,IACtB,kBAACG,EAAA,EAAD,CAAOC,MAAM,UAAUV,UAAU,kBAAkBM,SAKnE,kBAAC,OAAD,CAAMP,GAAIN,EAAMO,UAAU,uCAA1B,gB,YCaVW,EAAU,aA6BDC,UA7DG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKrB,MAAM,SACX,yCACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,cAAD,CAAaC,MAAOL,EAAYM,OAAQ,SAAAC,GACtC,OACE,6BACGA,EAAKC,kBAAkBC,MAAMf,KAAI,gBAAGgB,EAAH,EAAGA,KAAH,OAChC,kBAAC,EAAD,CACEd,IAAKc,EAAKC,GACV/B,MAAO8B,EAAKE,YAAYhC,MACxBC,OAAQ6B,EAAKE,YAAY/B,OACzBC,KAAM4B,EAAKG,OAAO/B,KAClBC,KAAM2B,EAAKE,YAAY7B,KACvBC,KAAM0B,EAAKI,QACX7B,MAAOyB,EAAKE,YAAYG,MAAMC,gBAAgB/B,MAC9CC,KAAMwB,EAAKE,YAAY1B,YAZjC,UAmBF,kBAACiB,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACa,EAAA,EAAD,W","file":"component---src-pages-index-js-49d3bcd0fcbee9b7ea13.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Card, CardTitle, CardText, CardSubtitle, CardBody, Badge} from 'reactstrap'\r\nimport Img from 'gatsby-image'\r\nimport { slugify } from '../util/utilityFunctions'\r\n\r\nconst Post = ({ title, author, slug, date, body, fluid, tags }) => {\r\n    return(\r\n        <Card>\r\n            <Link to={slug}>\r\n                <Img className=\"card-image-top\" fluid={fluid} />\r\n            </Link>\r\n            <CardBody>\r\n                <CardTitle><Link to={slug}>{title}</Link></CardTitle>\r\n                <CardSubtitle>\r\n                    <span className=\"text-info\">{date}</span> by{' '}\r\n                    <span className=\"text-info\">{author}</span>\r\n                </CardSubtitle>\r\n                <CardText>{body}</CardText>\r\n                <ul className=\"post-tags\">\r\n                    {tags.map(tag => (\r\n                        <li key={tag}>\r\n                            <Link to={`/tag/${slugify(tag)}`}>\r\n                                <Badge color=\"primary\" className=\"text-uppercase\">{tag}</Badge>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <Link to={slug} className=\"btn btn-outline-primary float-right\">\r\n                    Read more\r\n                </Link>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\"\r\nimport { graphql, StaticQuery } from \"gatsby\"\r\nimport {Row, Col} from \"reactstrap\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Post from \"../components/Post\"\r\nimport Sidebar from  \"../components/Sidebar\"\r\n\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <h1>Home page</h1>    \r\n    <Row>\r\n      <Col md=\"8\">\r\n        <StaticQuery query={indexQuery} render={data => {\r\n          return(\r\n            <div>\r\n              {data.allMarkdownRemark.edges.map(({ node }) =>(\r\n                <Post\r\n                  key={node.id}\r\n                  title={node.frontmatter.title}\r\n                  author={node.frontmatter.author}\r\n                  slug={node.fields.slug}\r\n                  date={node.frontmatter.date}\r\n                  body={node.excerpt}\r\n                  fluid={node.frontmatter.image.childImageSharp.fluid}\r\n                  tags={node.frontmatter.tags}\r\n                />\r\n              ))}\r\n            </div>\r\n          )\r\n        }}/>\r\n      </Col>\r\n      <Col md=\"4\">\r\n        <Sidebar/>\r\n      </Col>\r\n    </Row>\r\n  </Layout>\r\n)\r\n\r\nconst indexQuery = graphql`\r\n  query{\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }){\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter{\r\n            title\r\n            date(formatString: \"MMM Do YYYY\")\r\n            author\r\n            tags\r\n            image{\r\n              childImageSharp{\r\n                fluid(maxWidth:600){\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields{\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}